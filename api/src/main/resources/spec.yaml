openapi: 3.0.2
info:
  title: Smple API
  contact:
    name: Benoit Heinrich
    email: benoit.heinrich@gmail.com
  version: 1.0.0

paths:
  /stuff:
    description: Manage stuff
    get:
      summary: Get some stuff
      operationId: getStuff
      parameters:
        - in: query
          name: username
          required: true
          schema:
            $ref: '#/components/schemas/Username'
        - in: query
          name: filename
          allowReserved: true
          required: false
          schema:
            $ref: '#/components/schemas/Filename'
      responses:
        200:
          description: worked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkedOperationStatus'
              example:
                status: 'success'
                message: 'It worked'
                comment: 'the work to be done is done!'


    post:
      summary: Do some stuff
      operationId: doStuff
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workload'
            encoding:
              comment:
                contentType: application/json

      responses:
        200:
          description: worked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkedOperationStatus'
              example:
                status: 'success'
                message: 'It worked'
                comment: 'the work to be done is done!'


components:
  schemas:
    Workload:
      type: object
      required:
        - comment
      properties:
        comment:
          $ref: '#/components/schemas/Comment'

    Comment:
      description: A user comment
      type: string
      minLength: 1
      maxLength: 1000
      example:
        Some comment from user

    WorkedOperationStatus:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum:
            - error
            - success
        message:
          type: string
        comment:
          $ref: '#/components/schemas/Comment'
      example:
        status: 'error'
        message: 'Unknown work type'
        comment: 'the work to be done is done!'

    Username:
      description: The name of the user doing the action.
      type: string
      minLength: 1
      maxLength: 60
      example:
        John

    Filename:
      description: The name of a configuration file.
      type: string
      pattern: '^[a-zA-Z0-9_-]+\.(csv|groovy)$'
      example:
        04_a_DOCUMENTS.csv
